/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package brian_gl.mvsicplayer.frames;

import brian_gl.mvsicplayer.font.FontText;
import brian_gl.mvsicplayer.font.FontType;
import brian_gl.mvsicplayer.lang.Language;
import brian_gl.mvsicplayer.lang.LanguageText;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.net.MalformedURLException;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;

/**
 *
 * @author LENOVO
 */
public class MusicPlayerFrame extends javax.swing.JFrame {

    /**Language Class To Set Language Local Text In Frame*/
    private LanguageText _LanguageText;
    /**Font Class To Set Font Local Text In Frame*/
    private FontText _FontText;
    
    /**
     * Creates new form MusicPlayerFrame
     */
    public MusicPlayerFrame() {
        
        initComponents();
        customInitComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        languageButtonGroup = new javax.swing.ButtonGroup();
        fontButtonGroup = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        playerPanel = new javax.swing.JPanel();
        coverArtPreviousNextPanel = new javax.swing.JPanel();
        previousTrackLabel = new javax.swing.JLabel();
        coverArtLabel = new javax.swing.JLabel();
        nextTrackLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        artistAlbumLabel = new javax.swing.JLabel();
        durationProgressLabel = new javax.swing.JLabel();
        progressSlider = new javax.swing.JSlider();
        menuPanel = new javax.swing.JPanel();
        brandLabel = new javax.swing.JLabel();
        songsButton = new javax.swing.JButton();
        artistsButton = new javax.swing.JButton();
        albumsButton = new javax.swing.JButton();
        genresButton = new javax.swing.JButton();
        playlistsButton = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        hamburguerMenu = new javax.swing.JMenu();
        fileMenu = new javax.swing.JMenu();
        openFilesMenuItem = new javax.swing.JMenuItem();
        openFolderMenuItem = new javax.swing.JMenuItem();
        preferencesMenu = new javax.swing.JMenu();
        languageMenu = new javax.swing.JMenu();
        spanishRadioButtonMenuItem = new javax.swing.JRadioButtonMenuItem();
        englishRadioButtonMenuItem = new javax.swing.JRadioButtonMenuItem();
        fontMenu = new javax.swing.JMenu();
        anuphanRadioButtonMenuItem = new javax.swing.JRadioButtonMenuItem();
        firaSansRadioButtonMenuItem = new javax.swing.JRadioButtonMenuItem();
        interRadioButtonMenuItem = new javax.swing.JRadioButtonMenuItem();
        montserratRadioButtonMenuItem = new javax.swing.JRadioButtonMenuItem();
        openSansRadioButtonMenuItem = new javax.swing.JRadioButtonMenuItem();
        quickSandRadioButtonMenuItem = new javax.swing.JRadioButtonMenuItem();
        ralewayRadioButtonMenuItem = new javax.swing.JRadioButtonMenuItem();
        robotoRadioButtonMenuItem = new javax.swing.JRadioButtonMenuItem();

        languageButtonGroup.add(spanishRadioButtonMenuItem);
        languageButtonGroup.add(englishRadioButtonMenuItem);

        fontButtonGroup.add(anuphanRadioButtonMenuItem);
        fontButtonGroup.add(firaSansRadioButtonMenuItem);
        fontButtonGroup.add(interRadioButtonMenuItem);
        fontButtonGroup.add(montserratRadioButtonMenuItem);
        fontButtonGroup.add(openSansRadioButtonMenuItem);
        fontButtonGroup.add(quickSandRadioButtonMenuItem);
        fontButtonGroup.add(ralewayRadioButtonMenuItem);
        fontButtonGroup.add(robotoRadioButtonMenuItem);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mvsic Player");
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setName("musicPlayerFrame"); // NOI18N
        setSize(new java.awt.Dimension(1280, 720));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        mainPanel.setMinimumSize(new java.awt.Dimension(1080, 668));
        mainPanel.setPreferredSize(new java.awt.Dimension(1080, 668));
        mainPanel.setLayout(new java.awt.CardLayout());

        playerPanel.setMinimumSize(new java.awt.Dimension(1080, 668));
        playerPanel.setOpaque(false);
        playerPanel.setPreferredSize(new java.awt.Dimension(1080, 668));

        coverArtPreviousNextPanel.setMinimumSize(new java.awt.Dimension(900, 500));
        coverArtPreviousNextPanel.setPreferredSize(new java.awt.Dimension(900, 500));

        previousTrackLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        previousTrackLabel.setToolTipText("");
        previousTrackLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        previousTrackLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        previousTrackLabel.setMinimumSize(new java.awt.Dimension(150, 475));
        previousTrackLabel.setPreferredSize(new java.awt.Dimension(150, 475));
        previousTrackLabel.setRequestFocusEnabled(false);
        previousTrackLabel.setVerifyInputWhenFocusTarget(false);
        previousTrackLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                previousTrackLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                previousTrackLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                previousTrackLabelMouseExited(evt);
            }
        });

        coverArtLabel.setBackground(new java.awt.Color(255, 255, 255));
        coverArtLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coverArtLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        coverArtLabel.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        coverArtLabel.setMinimumSize(new java.awt.Dimension(475, 475));
        coverArtLabel.setPreferredSize(new java.awt.Dimension(475, 475));

        nextTrackLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nextTrackLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nextTrackLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        nextTrackLabel.setMinimumSize(new java.awt.Dimension(150, 475));
        nextTrackLabel.setPreferredSize(new java.awt.Dimension(150, 475));
        nextTrackLabel.setRequestFocusEnabled(false);
        nextTrackLabel.setVerifyInputWhenFocusTarget(false);
        nextTrackLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nextTrackLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nextTrackLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nextTrackLabelMouseExited(evt);
            }
        });

        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("<html><b>Title</b></html>");
        titleLabel.setToolTipText("");
        titleLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        titleLabel.setMaximumSize(new java.awt.Dimension(32780, 40));
        titleLabel.setMinimumSize(new java.awt.Dimension(37, 24));
        titleLabel.setPreferredSize(new java.awt.Dimension(37, 24));

        artistAlbumLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        artistAlbumLabel.setText("<html>Artist - <i>Album</i></html>");
        artistAlbumLabel.setToolTipText("");
        artistAlbumLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        artistAlbumLabel.setMaximumSize(new java.awt.Dimension(32780, 40));
        artistAlbumLabel.setMinimumSize(new java.awt.Dimension(37, 24));
        artistAlbumLabel.setPreferredSize(new java.awt.Dimension(37, 24));

        durationProgressLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        durationProgressLabel.setText("<html><i>00:00 / 00:00</i></html>");
        durationProgressLabel.setToolTipText("");
        durationProgressLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        durationProgressLabel.setMaximumSize(new java.awt.Dimension(32780, 40));
        durationProgressLabel.setMinimumSize(new java.awt.Dimension(37, 24));
        durationProgressLabel.setPreferredSize(new java.awt.Dimension(37, 24));

        progressSlider.setToolTipText("");
        progressSlider.setValue(0);
        progressSlider.setEnabled(false);

        javax.swing.GroupLayout coverArtPreviousNextPanelLayout = new javax.swing.GroupLayout(coverArtPreviousNextPanel);
        coverArtPreviousNextPanel.setLayout(coverArtPreviousNextPanelLayout);
        coverArtPreviousNextPanelLayout.setHorizontalGroup(
            coverArtPreviousNextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(coverArtPreviousNextPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(previousTrackLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(coverArtPreviousNextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(progressSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(durationProgressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(artistAlbumLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(coverArtLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(nextTrackLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        coverArtPreviousNextPanelLayout.setVerticalGroup(
            coverArtPreviousNextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(coverArtPreviousNextPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(coverArtPreviousNextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(coverArtLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(previousTrackLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nextTrackLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(artistAlbumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(durationProgressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progressSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout playerPanelLayout = new javax.swing.GroupLayout(playerPanel);
        playerPanel.setLayout(playerPanelLayout);
        playerPanelLayout.setHorizontalGroup(
            playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(coverArtPreviousNextPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1080, Short.MAX_VALUE)
        );
        playerPanelLayout.setVerticalGroup(
            playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(coverArtPreviousNextPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE))
        );

        mainPanel.add(playerPanel, "player");

        menuPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        menuPanel.setMaximumSize(new java.awt.Dimension(200, 32767));
        menuPanel.setMinimumSize(new java.awt.Dimension(200, 688));
        menuPanel.setPreferredSize(new java.awt.Dimension(200, 688));
        menuPanel.setLayout(new javax.swing.BoxLayout(menuPanel, javax.swing.BoxLayout.PAGE_AXIS));

        brandLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        brandLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/mvsic-player-brand.png"))); // NOI18N
        brandLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        brandLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        brandLabel.setIconTextGap(0);
        brandLabel.setMaximumSize(new java.awt.Dimension(200, 100));
        brandLabel.setMinimumSize(new java.awt.Dimension(200, 100));
        brandLabel.setPreferredSize(new java.awt.Dimension(200, 100));
        ((ImageIcon)brandLabel.getIcon()).getImage().flush();
        brandLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                brandLabelMouseClicked(evt);
            }
        });
        menuPanel.add(brandLabel);

        songsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/nota.png"))); // NOI18N
        songsButton.setText("Songs");
        songsButton.setToolTipText("<html><b>Loaded Songs</b></html>");
        songsButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        songsButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        songsButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        songsButton.setMargin(new java.awt.Insets(5, 5, 5, 5));
        songsButton.setMaximumSize(new java.awt.Dimension(200, 55));
        songsButton.setMinimumSize(new java.awt.Dimension(200, 55));
        songsButton.setOpaque(true);
        songsButton.setPreferredSize(new java.awt.Dimension(200, 55));
        ((ImageIcon)songsButton.getIcon()).getImage().flush();
        songsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                songsButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                songsButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                songsButtonMouseExited(evt);
            }
        });
        menuPanel.add(songsButton);

        artistsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/violinista.png"))); // NOI18N
        artistsButton.setText("Artists");
        artistsButton.setToolTipText("<html><b>Loaded Artists</b></html>");
        artistsButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        artistsButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        artistsButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        artistsButton.setMargin(new java.awt.Insets(5, 5, 5, 5));
        artistsButton.setMaximumSize(new java.awt.Dimension(200, 55));
        artistsButton.setMinimumSize(new java.awt.Dimension(200, 55));
        artistsButton.setOpaque(true);
        artistsButton.setPreferredSize(new java.awt.Dimension(200, 55));
        ((ImageIcon)artistsButton.getIcon()).getImage().flush();
        artistsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                artistsButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                artistsButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                artistsButtonMouseExited(evt);
            }
        });
        menuPanel.add(artistsButton);

        albumsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/revista.png"))); // NOI18N
        albumsButton.setText("Albums");
        albumsButton.setToolTipText("<html><b>Loaded Albums</b></html>");
        albumsButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        albumsButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        albumsButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        albumsButton.setMargin(new java.awt.Insets(5, 5, 5, 5));
        albumsButton.setMaximumSize(new java.awt.Dimension(200, 55));
        albumsButton.setMinimumSize(new java.awt.Dimension(200, 55));
        albumsButton.setOpaque(true);
        albumsButton.setPreferredSize(new java.awt.Dimension(200, 55));
        ((ImageIcon)albumsButton.getIcon()).getImage().flush();
        albumsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                albumsButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                albumsButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                albumsButtonMouseExited(evt);
            }
        });
        menuPanel.add(albumsButton);

        genresButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/jazz.png"))); // NOI18N
        genresButton.setText("Genres");
        genresButton.setToolTipText("<html><b>Loaded Genres</b></html>");
        genresButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        genresButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        genresButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        genresButton.setMargin(new java.awt.Insets(5, 5, 5, 5));
        genresButton.setMaximumSize(new java.awt.Dimension(200, 55));
        genresButton.setMinimumSize(new java.awt.Dimension(200, 55));
        genresButton.setOpaque(true);
        genresButton.setPreferredSize(new java.awt.Dimension(200, 55));
        ((ImageIcon)genresButton.getIcon()).getImage().flush();
        genresButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                genresButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                genresButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                genresButtonMouseExited(evt);
            }
        });
        menuPanel.add(genresButton);

        playlistsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/lista-de-reproduccion.png"))); // NOI18N
        playlistsButton.setText("Playlists");
        playlistsButton.setToolTipText("<html><b>Playlists</b></html>");
        playlistsButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        playlistsButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        playlistsButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        playlistsButton.setMargin(new java.awt.Insets(5, 5, 5, 5));
        playlistsButton.setMaximumSize(new java.awt.Dimension(200, 55));
        playlistsButton.setMinimumSize(new java.awt.Dimension(200, 55));
        playlistsButton.setOpaque(true);
        playlistsButton.setPreferredSize(new java.awt.Dimension(200, 55));
        ((ImageIcon)playlistsButton.getIcon()).getImage().flush();
        playlistsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playlistsButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                playlistsButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                playlistsButtonMouseExited(evt);
            }
        });
        menuPanel.add(playlistsButton);

        menuBar.setBorder(null);
        menuBar.setMaximumSize(new java.awt.Dimension(32767, 32));
        menuBar.setMinimumSize(new java.awt.Dimension(900, 32));
        menuBar.setName(""); // NOI18N
        menuBar.setPreferredSize(new java.awt.Dimension(900, 32));

        hamburguerMenu.setText("<html><b>☰</b></html>");
        hamburguerMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hamburguerMenuMouseClicked(evt);
            }
        });
        menuBar.add(hamburguerMenu);

        fileMenu.setText("<html><b>File</b></html>");
        fileMenu.setToolTipText("");
        fileMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        openFilesMenuItem.setText("Open File(s)");
        openFilesMenuItem.setToolTipText("<html><i>Open some files to play</i></html>");
        openFilesMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                openFilesMenuItemMouseClicked(evt);
            }
        });
        fileMenu.add(openFilesMenuItem);

        openFolderMenuItem.setText("Open Folder");
        openFolderMenuItem.setToolTipText("<html><i>Open files folder to play</i></html>");
        openFolderMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                openFolderMenuItemMouseClicked(evt);
            }
        });
        fileMenu.add(openFolderMenuItem);

        menuBar.add(fileMenu);

        preferencesMenu.setText("<html><b>Preferences</b></html>");
        preferencesMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        languageMenu.setText("<html>Languague</html>");
        languageMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        spanishRadioButtonMenuItem.setSelected(true);
        spanishRadioButtonMenuItem.setText("<html><b><i>Español</i></b></html>");
        spanishRadioButtonMenuItem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        spanishRadioButtonMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                spanishRadioButtonMenuItemMousePressed(evt);
            }
        });
        languageMenu.add(spanishRadioButtonMenuItem);

        englishRadioButtonMenuItem.setText("<html><b><i>English</i></b></html>");
        englishRadioButtonMenuItem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        englishRadioButtonMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                englishRadioButtonMenuItemMousePressed(evt);
            }
        });
        languageMenu.add(englishRadioButtonMenuItem);

        preferencesMenu.add(languageMenu);

        fontMenu.setText("<html>Font</html>");

        anuphanRadioButtonMenuItem.setText("<html><b><i>Anuphan</i></b></html>");
        anuphanRadioButtonMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                anuphanRadioButtonMenuItemMousePressed(evt);
            }
        });
        fontMenu.add(anuphanRadioButtonMenuItem);

        firaSansRadioButtonMenuItem.setText("<html><b><i>Fira Sans</i></b></html>");
        firaSansRadioButtonMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                firaSansRadioButtonMenuItemMousePressed(evt);
            }
        });
        fontMenu.add(firaSansRadioButtonMenuItem);

        interRadioButtonMenuItem.setText("<html><b><i>Inter</i></b></html>");
        interRadioButtonMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                interRadioButtonMenuItemMousePressed(evt);
            }
        });
        fontMenu.add(interRadioButtonMenuItem);

        montserratRadioButtonMenuItem.setText("<html><b><i>Montserrat</i></b></html>");
        montserratRadioButtonMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                montserratRadioButtonMenuItemMousePressed(evt);
            }
        });
        fontMenu.add(montserratRadioButtonMenuItem);

        openSansRadioButtonMenuItem.setText("<html><b><i>Open Sans</i></b></html>");
        openSansRadioButtonMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                openSansRadioButtonMenuItemMousePressed(evt);
            }
        });
        fontMenu.add(openSansRadioButtonMenuItem);

        quickSandRadioButtonMenuItem.setText("<html><b><i>QuickSand</i></b></html>");
        quickSandRadioButtonMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                quickSandRadioButtonMenuItemMousePressed(evt);
            }
        });
        fontMenu.add(quickSandRadioButtonMenuItem);

        ralewayRadioButtonMenuItem.setText("<html><b><i>Raleway</i></b></html>");
        ralewayRadioButtonMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ralewayRadioButtonMenuItemMousePressed(evt);
            }
        });
        fontMenu.add(ralewayRadioButtonMenuItem);

        robotoRadioButtonMenuItem.setSelected(true);
        robotoRadioButtonMenuItem.setText("<html><b><i>Roboto</i></b></html>");
        robotoRadioButtonMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                robotoRadioButtonMenuItemMousePressed(evt);
            }
        });
        fontMenu.add(robotoRadioButtonMenuItem);

        preferencesMenu.add(fontMenu);

        menuBar.add(preferencesMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        evt.getWindow().dispose(); System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    private void englishRadioButtonMenuItemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_englishRadioButtonMenuItemMousePressed
        // TODO add your handling code here:
        setLanguage(Language.ENGLISH);
    }//GEN-LAST:event_englishRadioButtonMenuItemMousePressed

    private void spanishRadioButtonMenuItemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_spanishRadioButtonMenuItemMousePressed
        // TODO add your handling code here:
        setLanguage(Language.SPANISH);
    }//GEN-LAST:event_spanishRadioButtonMenuItemMousePressed

    private void previousTrackLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previousTrackLabelMouseEntered
        // TODO add your handling code here:
        previousTrackLabel.setText("<html><p style='font-size:50px;'>&#x227A;</p></html>");
    }//GEN-LAST:event_previousTrackLabelMouseEntered

    private void previousTrackLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previousTrackLabelMouseExited
        // TODO add your handling code here:
        previousTrackLabel.setText("");
    }//GEN-LAST:event_previousTrackLabelMouseExited

    private void nextTrackLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextTrackLabelMouseEntered
        // TODO add your handling code here:
        nextTrackLabel.setText("<html><p style='font-size:50px;'>&#x227B;</p></html>");
    }//GEN-LAST:event_nextTrackLabelMouseEntered

    private void nextTrackLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextTrackLabelMouseExited
        // TODO add your handling code here:
        nextTrackLabel.setText("");
    }//GEN-LAST:event_nextTrackLabelMouseExited

    private void anuphanRadioButtonMenuItemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_anuphanRadioButtonMenuItemMousePressed
        // TODO add your handling code here:
        setFontType(FontType.ANUPHAN);
    }//GEN-LAST:event_anuphanRadioButtonMenuItemMousePressed

    private void firaSansRadioButtonMenuItemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_firaSansRadioButtonMenuItemMousePressed
        // TODO add your handling code here:
        setFontType(FontType.FIRA_SANS);
    }//GEN-LAST:event_firaSansRadioButtonMenuItemMousePressed

    private void interRadioButtonMenuItemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_interRadioButtonMenuItemMousePressed
        // TODO add your handling code here:
        setFontType(FontType.INTER);
    }//GEN-LAST:event_interRadioButtonMenuItemMousePressed

    private void montserratRadioButtonMenuItemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_montserratRadioButtonMenuItemMousePressed
        // TODO add your handling code here:
        setFontType(FontType.MONTSERRAT);
    }//GEN-LAST:event_montserratRadioButtonMenuItemMousePressed

    private void openSansRadioButtonMenuItemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openSansRadioButtonMenuItemMousePressed
        // TODO add your handling code here:
        setFontType(FontType.OPEN_SANS);
    }//GEN-LAST:event_openSansRadioButtonMenuItemMousePressed

    private void quickSandRadioButtonMenuItemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quickSandRadioButtonMenuItemMousePressed
        // TODO add your handling code here:
        setFontType(FontType.QUICKSAND);
    }//GEN-LAST:event_quickSandRadioButtonMenuItemMousePressed

    private void ralewayRadioButtonMenuItemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ralewayRadioButtonMenuItemMousePressed
        // TODO add your handling code here:
        setFontType(FontType.RALEWAY);
    }//GEN-LAST:event_ralewayRadioButtonMenuItemMousePressed

    private void robotoRadioButtonMenuItemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_robotoRadioButtonMenuItemMousePressed
        // TODO add your handling code here:
        setFontType(FontType.ROBOTO);
    }//GEN-LAST:event_robotoRadioButtonMenuItemMousePressed

    private void hamburguerMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hamburguerMenuMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            menuPanel.setVisible(!menuPanel.isVisible());
        }
    }//GEN-LAST:event_hamburguerMenuMouseClicked

    private void songsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_songsButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_songsButtonMouseClicked

    private void songsButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_songsButtonMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_songsButtonMouseEntered

    private void songsButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_songsButtonMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_songsButtonMouseExited

    private void artistsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_artistsButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_artistsButtonMouseClicked

    private void artistsButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_artistsButtonMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_artistsButtonMouseEntered

    private void artistsButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_artistsButtonMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_artistsButtonMouseExited

    private void albumsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_albumsButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_albumsButtonMouseClicked

    private void albumsButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_albumsButtonMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_albumsButtonMouseEntered

    private void albumsButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_albumsButtonMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_albumsButtonMouseExited

    private void genresButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_genresButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_genresButtonMouseClicked

    private void genresButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_genresButtonMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_genresButtonMouseEntered

    private void genresButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_genresButtonMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_genresButtonMouseExited

    private void playlistsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playlistsButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_playlistsButtonMouseClicked

    private void playlistsButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playlistsButtonMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_playlistsButtonMouseEntered

    private void playlistsButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playlistsButtonMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_playlistsButtonMouseExited

    private void brandLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_brandLabelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_brandLabelMouseClicked

    private void nextTrackLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextTrackLabelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_nextTrackLabelMouseClicked

    private void previousTrackLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previousTrackLabelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_previousTrackLabelMouseClicked

    private void openFilesMenuItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openFilesMenuItemMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_openFilesMenuItemMouseClicked

    private void openFolderMenuItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openFolderMenuItemMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_openFolderMenuItemMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton albumsButton;
    private javax.swing.JRadioButtonMenuItem anuphanRadioButtonMenuItem;
    private javax.swing.JLabel artistAlbumLabel;
    private javax.swing.JButton artistsButton;
    private javax.swing.JLabel brandLabel;
    private javax.swing.JLabel coverArtLabel;
    private javax.swing.JPanel coverArtPreviousNextPanel;
    private javax.swing.JLabel durationProgressLabel;
    private javax.swing.JRadioButtonMenuItem englishRadioButtonMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JRadioButtonMenuItem firaSansRadioButtonMenuItem;
    private javax.swing.ButtonGroup fontButtonGroup;
    private javax.swing.JMenu fontMenu;
    private javax.swing.JButton genresButton;
    private javax.swing.JMenu hamburguerMenu;
    private javax.swing.JRadioButtonMenuItem interRadioButtonMenuItem;
    private javax.swing.ButtonGroup languageButtonGroup;
    private javax.swing.JMenu languageMenu;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JRadioButtonMenuItem montserratRadioButtonMenuItem;
    private javax.swing.JLabel nextTrackLabel;
    private javax.swing.JMenuItem openFilesMenuItem;
    private javax.swing.JMenuItem openFolderMenuItem;
    private javax.swing.JRadioButtonMenuItem openSansRadioButtonMenuItem;
    private javax.swing.JPanel playerPanel;
    private javax.swing.JButton playlistsButton;
    private javax.swing.JMenu preferencesMenu;
    private javax.swing.JLabel previousTrackLabel;
    private javax.swing.JSlider progressSlider;
    private javax.swing.JRadioButtonMenuItem quickSandRadioButtonMenuItem;
    private javax.swing.JRadioButtonMenuItem ralewayRadioButtonMenuItem;
    private javax.swing.JRadioButtonMenuItem robotoRadioButtonMenuItem;
    private javax.swing.JButton songsButton;
    private javax.swing.JRadioButtonMenuItem spanishRadioButtonMenuItem;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables

    private void customInitComponents(){
        
       try {
                
            //Set frame icon:
            File frameIconFile = new File("src/main/resources/img/mvsic-player-logo-simple.png");
            Image iconImage = Toolkit.getDefaultToolkit().getImage(frameIconFile.toURI().toURL());
            setIconImage(iconImage);
            iconImage.flush();
            
            //Set language:
            _LanguageText = new LanguageText();
            setLanguage(Language.SPANISH);
            
            //Set font type:
            _FontText = new FontText();
            setFontType(FontType.ROBOTO);
            
            //Hide menu panel:
            menuPanel.setVisible(false);

        } catch (MalformedURLException ex) {

        } 
    }
    
    private void setLanguage(Language language){
        
         _LanguageText.setLanguage(language);
        
        //Menu Items:
        fileMenu.setText(_LanguageText.MenuFileText());
        fileMenu.setToolTipText(_LanguageText.MenuFileTooltipText());
        
        preferencesMenu.setText(_LanguageText.MenuPreferencesText());
        preferencesMenu.setToolTipText(_LanguageText.MenuPreferencesTooltipText());
        
        //Menus:
        languageMenu.setText(_LanguageText.MenuLanguageText());
        languageMenu.setToolTipText(_LanguageText.MenuLanguageTooltipText());
        
        fontMenu.setText(_LanguageText.MenuFontText());
        fontMenu.setToolTipText(_LanguageText.MenuFontTooltipText());
        
        openFilesMenuItem.setText(_LanguageText.MenuItemOpenFilesText());
        openFilesMenuItem.setToolTipText(_LanguageText.MenuItemOpenFilesTooltipText());
        
        openFolderMenuItem.setText(_LanguageText.MenuItemOpenFolderText());
        openFolderMenuItem.setToolTipText(_LanguageText.MenuItemOpenFolderTooltipText());
        
        
        //Labels:
        
        titleLabel.setText(_LanguageText.LabelTitleText());
        titleLabel.setToolTipText(_LanguageText.LabelTitleTooltipText());
        
        artistAlbumLabel.setText(_LanguageText.LabelArtistAlbumText());
        artistAlbumLabel.setToolTipText(_LanguageText.LabelArtistAlbumTooltipText());
        
        durationProgressLabel.setToolTipText(_LanguageText.LabelDurationProgressTooltipText());
        
        previousTrackLabel.setToolTipText(_LanguageText.LabelPreviousTrackTooltipText());
        
        nextTrackLabel.setToolTipText(_LanguageText.LabelNextTrackTooltipText());
        
        brandLabel.setToolTipText(_LanguageText.LabelBrandTooltipText());
        
        //Buttons:
        
        songsButton.setText(_LanguageText.ButtonSongsText());
        songsButton.setToolTipText(_LanguageText.ButtonSongsTooltipText());
        
        artistsButton.setText(_LanguageText.ButtonArtistsText());
        artistsButton.setToolTipText(_LanguageText.ButtonArtistsTooltipText());
        
        albumsButton.setText(_LanguageText.ButtonAlbumsText());
        albumsButton.setToolTipText(_LanguageText.ButtonAlbumsTooltipText());
        
        genresButton.setText(_LanguageText.ButtonGenresText());
        genresButton.setToolTipText(_LanguageText.ButtonGenresTooltipText());
        
        playlistsButton.setText(_LanguageText.ButtonPlaylistsText());
        playlistsButton.setToolTipText(_LanguageText.ButtonPlaylistsTooltipText());
        
    }
    
    private void setFontType(FontType fontType){
        
        _FontText.setFontType(fontType);
        
        Font createdFont = _FontText.getFont();
        
        //Menu Items:

        Font menuItemFont = createdFont.deriveFont(13f);
        
        fileMenu.setFont(menuItemFont);
        preferencesMenu.setFont(menuItemFont);
        

        //Menus:

        Font menuFont = createdFont.deriveFont(12f);
        languageMenu.setFont(menuFont);
        fontMenu.setFont(menuFont);

        //Radio Button Menus:
        anuphanRadioButtonMenuItem.setFont(menuFont);
        englishRadioButtonMenuItem.setFont(menuFont);
        firaSansRadioButtonMenuItem.setFont(menuFont);
        interRadioButtonMenuItem.setFont(menuFont);
        montserratRadioButtonMenuItem.setFont(menuFont);
        openSansRadioButtonMenuItem.setFont(menuFont);
        quickSandRadioButtonMenuItem.setFont(menuFont);
        ralewayRadioButtonMenuItem.setFont(menuFont);
        robotoRadioButtonMenuItem.setFont(menuFont);
        spanishRadioButtonMenuItem.setFont(menuFont);
        
        openFilesMenuItem.setFont(menuFont);
        openFolderMenuItem.setFont(menuFont);

        //Labels:

        Font labelFont = createdFont.deriveFont(14f);

        titleLabel.setFont(labelFont);
        artistAlbumLabel.setFont(labelFont);
        durationProgressLabel.setFont(menuItemFont);
        
        //Buttons:
        
        Font buttonFont = createdFont.deriveFont(18f);
        songsButton.setFont(buttonFont);
        artistsButton.setFont(buttonFont);
        albumsButton.setFont(buttonFont);
        genresButton.setFont(buttonFont);
        playlistsButton.setFont(buttonFont);
        
        //Specials
        Font specialFont = createdFont.deriveFont(24f);
        hamburguerMenu.setFont(specialFont);
        
           
    }
}
